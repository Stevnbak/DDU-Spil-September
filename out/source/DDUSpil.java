/* autogenerated by Processing revision 1286 on 2022-09-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class DDUSpil extends PApplet {

PVector camLocation;
float camSpeed = 20;
Player player = new Player();

public HashMap<String,Boolean> inputs = new HashMap<String,Boolean>();

 public void setup() {
  /* size commented out by preprocessor */;
  surface.setTitle("Test Title");
  surface.setResizable(true);
  //surface.setLocation(width/2, height/2);
  camLocation = new PVector(0,0);
}

 public void updateCamLocation() {
    PVector centerLocation = new PVector(camLocation.x + width/2, camLocation.y + height /2);
    float xDistance = centerLocation.x - player.location.x;
    float yDistance = centerLocation.y - player.location.y;
    camLocation.x -= xDistance / camSpeed;
    camLocation.y -= yDistance / camSpeed;
}

// Inputs
public Boolean getInput(String keyValue) 
{ 
  return inputs.getOrDefault(keyValue, false); 
}
 public void keyPressed() {
  inputs.put(key + "", true);
}
 public void keyReleased() {
  inputs.put(key + "", false);
}
 public void mousePressed() {
  switch (mouseButton) {
    case 37: {inputs.put("MLeft", true); break;}
    case 39: {inputs.put("MRight", true); break;}
    case 3: {inputs.put("MMid", true); break;}
  }
}
 public void mouseReleased() {
  switch (mouseButton) {
    case 37: {inputs.put("MLeft", false); break;}
    case 39: {inputs.put("MRight", false); break;}
    case 3: {inputs.put("MMid", false); break;}
  }
}

//Draw
 public void draw() {
  print(inputs + "\n");
  player.update();
  
  background(255);
  updateCamLocation();
  translate(-camLocation.x, -camLocation.y);

  player.draw();


  noStroke();
  colorMode(RGB);
  fill(120,60,60);
  
  ellipse(width / 2, height / 2,100,100);
  ellipse(200, 50 ,100,100);
}
class Player {
  PVector location = new PVector(0, 0);

   public void update() {
    if (getInput("a")) {
      location.x -= 5;
    }
    if (getInput("d")) {
      location.x += 5;
    }
    if (getInput("w")) {
      location.y -= 5;
    }
    if (getInput("s")) {
      location.y += 5;
    }
  }



   public void draw() {
    noStroke();
    colorMode(RGB);
    fill(60, 120, 60);
    ellipse(location.x, location.y, 100, 100);
  }
}


  public void settings() { size(1080, 720); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "DDUSpil" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
